@page "/ProcessVersion/{version}"
@using SampleAppManager.LiteDB;
@using SampleAppManager.Model;
@using SampleAppManager.Pages.Dialoge;
@inject NavigationManager NavigationManager

@using static SampleAppManager.Pages.ProgressItem;
@inject ProcessVersionWithStatus ProcessVersionStatus
@inject LiteDbContext ProcessVersionData
@inject IWebHostEnvironment Environment
@inject Authentication authentication

@foreach (var pipline in ProcessVersionStatus.curSelect.ProcessPiplines)
{
	<Divider Orientation="left" Style="font-weight:bold">@pipline.PiplineName</Divider>

	<Space Direction="DirectionVHType.Horizontal" Align="end" Size="@($"{size}")">
		@foreach (var item in pipline.ProcessItems)
		{

			<SpaceItem>
				<AppItem appSrc="item.Apk" ChangeData="(loader)=>
				{
				item.Apk=loader;
				var pip = ProcessVersionStatus.curSelect;
				//新的
				var task = ProcessVersionData.ProcessVersions.Update(pip);
				}"/>
			</SpaceItem>
			@if (!item.IsFinalAPK)
			{
				<SpaceItem>
					<ProgressItem CheckConditionName="item.CheckCondition" OnclickAction="OnCheckSave"/>
				</SpaceItem>
			}
			else
			{
				break;
			}

	}
	</Space>
}
@if (authentication.isAdmin)
{
	<div>
		<NewPiplineDialoge OnCancel="OnCancel" OnConfirm="OnConfirm" />
	</div>
}


@code {
	[Parameter]
	public string version { get; set; }
	double size = 15;


	protected override void OnInitialized()
	{

	}

	protected override async Task OnInitializedAsync()
	{

	}


	public void OnCheckSave()
	{
		if (!authentication.isChecking)
		{
			return;
		}
		var pip = ProcessVersionStatus.curSelect;
		//新的
		var task = ProcessVersionData.ProcessVersions.Update(pip);
	}

	public async void OnConfirm(ProcessPipline line)
	{
		if (string.IsNullOrEmpty(line.PiplineName))
		{
			return;
		}
		for (int i = 0; i < line.ProcessItems.Count; i++)
		{
			var curProcessItem = line.ProcessItems[i];
			if (i == line.ProcessItems.Count-1)
			{
				curProcessItem.IsFinalAPK = true;
			}
		}

		ProcessVersionStatus.curSelect.ProcessPiplines.Add(line);

		var pip = ProcessVersionStatus.curSelect;
		//新的
		var task= ProcessVersionData.ProcessVersions.Update(pip);
	}

	public async void OnCancel()
	{

	}
}