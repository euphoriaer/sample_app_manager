@page "/"
@inject NavigationManager NavigationManager
Index

@inject LiteDbContext Data

<div>
	<GridRow>

		<GridCol Span="12">
			<Layout>
				@*目前不支持中文，不支持大文件（250MB）*@
				<Upload Action="/api/file/upload"
						BeforeUpload="(file)=>{return frontendUpload(file);}"
						Name="files"
						Data="new Dictionary<string, object>() { }"
							OnChange="OnUploadChange"
						Accept="image/png,image/jpeg"
						Drag
						Multiple
						OnSingleCompleted="OnSingleCompleted">
					<p class="ant-upload-drag-icon">
						<Icon Type="inbox" />
					</p>
					<p class="ant-upload-text">Click or drag file to this area to upload</p>
					<p class="ant-upload-hint">
						Support for a single or bulk upload. Strictly prohibit from uploading company data or other
						band files
					</p>
				</Upload>
				<AuthorizeView>
					<Authorized>
						<span>You're authorized as @context.User.Identity.Name</span>
					</Authorized>
					<NotAuthorized>
						<span>You're not authorized</span>
					</NotAuthorized>
				</AuthorizeView>
				</Layout>
				</GridCol>

				<GridCol Span="12">
				<Layout>
				<span>AppList</span>
				<AntList DataSource="@appItems" ItemLayout="@ListItemLayout.Vertical" Bordered="true" Split="true">
					<ChildContent Context="item">
						<ListItem>
							<ListItemMeta Description="@item.Description">
								<AvatarTemplate>
									<QRCode Value="@item.QRcode" Alt="QRCode image" Style="{width:100;height:100px;}" DrawQuietZones=false PixelsPerModule=8 />
								</AvatarTemplate>
								<TitleTemplate>
									@item.Name
								</TitleTemplate>
							</ListItemMeta>
						</ListItem>
					</ChildContent>
				</AntList>
				</Layout>
				</GridCol>

				</GridRow>
			</div>

			@code {

	public string uploadUrl;
	List<APKItem> appItems = new List<APKItem>();
	protected override void OnInitialized()
	{
		appItems = Data.Apps.Get();
	}

	bool frontendUpload(UploadFileItem item)
	{
		var x= item.ObjectURL;
		var x1= item.Percent;
		var x2= item.Response;
		var x3= item.FileName;
		return true;
	}

	void  OnUploadChange(UploadInfo file)
	{
		var item = file.File;
		var x= item.ObjectURL;
		var x1= item.Percent;
		var x2= item.Response;
		var x3= item.FileName;
	
	}

	void OnSingleCompleted(UploadInfo fileinfo)
	{
		 
		if (fileinfo.File.State == UploadState.Success)
		{
			//var result = fileinfo.File.GetResponse<ResponseModel>();
			//fileinfo.File.Url = result.url;
		}
	}

	public class ResponseModel
	{
		public string name { get; set; }

		public string status { get; set; }

		public string url { get; set; }

		public string thumbUrl { get; set; }
	}
}